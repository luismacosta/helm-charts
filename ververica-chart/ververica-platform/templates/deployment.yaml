apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: ververica-platform
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    system: ververica-platform
    {{- with mergeOverwrite .Values.extraLabels .Values.deploymentLabels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      component: ververica-platform
      release: "{{ .Release.Name }}"
      system: ververica-platform
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        component: ververica-platform
        release: "{{ .Release.Name }}"
        system: ververica-platform
        {{- with .Values.extraLabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/blobstoragesecret: {{ include (print $.Template.BasePath "/secret-blob-storage-credentials.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.rbac.create | ternary (include "fullname" .) (.Values.rbac.serviceAccountName | quote) }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.extraInitContainers }}
      initContainers:
        {{ toYaml . | trim | nindent 8 }}
      {{- end }}
      containers:
        {{- with .Values.extraContainers }}
        {{ toYaml . | trim | nindent 8 }}
        {{- end }}
        - name: appmanager
          image: {{ include "vvp.appmanager.repo" . }}:{{ .Values.appmanager.image.tag }}
          imagePullPolicy: {{ .Values.appmanager.image.pullPolicy | quote }}
          env:
            - name: spring.profiles.active
              value: prod,prod-user
            - name: spring.config.additional-location
            {{- if .Values.licenseConfigPath }}
              value: file:/vvp/etc/,{{ .Values.licenseConfigPath }}
            {{- else }}
              value: file:/vvp/etc/
            {{- end}}
            {{- if .Values.env }}
            {{ toYaml .Values.env | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9080
            - name: management
              containerPort: 9081
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: management
            initialDelaySeconds: 90
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: management
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
          {{ toYaml .Values.appmanager.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.volumeMounts }}
          {{ toYaml .Values.volumeMounts | trim | nindent 10 }}
          {{- end }}
          - name: config
            mountPath: /vvp/etc
            readOnly: true
          - name: blob-storage-creds
            mountPath: /vvp/secrets/blob-storage-creds
            readOnly: true
          - name: data
            mountPath: /vvp/data
            subPath: {{ .Values.persistentVolume.subPath | quote }}
        - name: gateway
          image: {{ include "vvp.gateway.repo" . }}:{{ .Values.gateway.image.tag }}
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy | quote }}
          env:
          - name: spring.profiles.active
            value: prod,prod-defaults,prod-user
          - name: spring.config.additional-location
          {{- if .Values.licenseConfigPath }}
            value: file:/vvp/etc/,{{ .Values.licenseConfigPath }}
          {{- else }}
            value: file:/vvp/etc/
          {{- end}}
          {{- $bootstrapToken := include "vvp.bootstrap.token" . }}
          {{- if $bootstrapToken }}
          - name: vvp.auth.bootstrap-token.token
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: bootstrapToken
          {{- end }}
          {{- if .Values.env }}
          {{ toYaml .Values.env | nindent 10 }}
          {{- end }}
          ports:
          - name: http
            containerPort: 8080
          - name: management
            containerPort: 8081
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: management
            initialDelaySeconds: 90
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: management
            initialDelaySeconds: 10
          resources:
            {{ toYaml .Values.gateway.resources | trim | nindent 12 }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
          {{ toYaml . | trim | nindent 10 }}
          {{- end }}
          - name: config
            mountPath: /vvp/etc
            readOnly: true
          - name: blob-storage-creds
            mountPath: /vvp/secrets/blob-storage-creds
            readOnly: true
          - name: saml-creds
            mountPath: /vvp/secrets/saml-creds
            readOnly: true
          - name: data
            mountPath: /vvp/data
            subPath: {{ .Values.persistentVolume.subPath | quote }}
        - name: ui
          image: {{ include "vvp.ui.repo" . }}:{{ .Values.ui.image.tag }}
          imagePullPolicy: {{ .Values.ui.image.pullPolicy | quote }}
          ports:
          - name: http
            containerPort: 4200
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{ toYaml .Values.ui.resources | trim | nindent 12 }}
      volumes:
        {{- with .Values.volumes }}
        {{ toYaml . | trim | nindent 8 }}
        {{- end }}
        - name: config
          configMap:
            name: {{ template "fullname" . }}-config
        - name: blob-storage-creds
          {{- if .Values.blobStorageCredentials }}
          secret:
            secretName: {{ (empty .Values.blobStorageCredentials.existingSecret) | ternary (printf "%s-blob-storage-credentials" (include "fullname" .)) (.Values.blobStorageCredentials.existingSecret | quote) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: saml-creds
          {{- if .Values.samlCredentials }}
          secret:
            secretName: {{ (empty .Values.samlCredentials.existingSecret) | ternary (printf "%s-saml-credentials" (include "fullname" .)) (.Values.samlCredentials.existingSecret | quote) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: data
          {{- if (eq (include "vvp.pvc.enabled" .) "true") }}
          persistentVolumeClaim:
            claimName: {{ (empty .Values.persistentVolume.existingClaim) | ternary (include "fullname" .) (.Values.persistentVolume.existingClaim | quote) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
